# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: publish-version

on: 
  push:
    branches:  ["main"]
  
jobs:

  build:
    runs-on: ubuntu-latest
    environment: Production
    strategy:
      matrix:
        go-version: [ '1.22.x' ]

    steps:
    - uses: actions/checkout@v3
  
    # Get values for cache paths to be used in later steps
    - id: go-cache-paths
      run: |
        echo "::set-output name=go-build::$(go env GOCACHE)"
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"

    # Cache go build cache, used to speedup go test
    - name: Go Build Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-build }}
        key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

    # Cache go mod cache, used to speedup builds
    - name: Go Mod Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

    # Read version from file
    - name: Read version
      id: version
      run: echo ::set-output name=version::$(cat version.config)

    # Set up Go
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    # In this step, this action saves a list of existing images,
    - name: Create tag
      uses: actions/github-script@v5
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/${{ steps.version.outputs.version }}',
            sha: context.sha
          })
